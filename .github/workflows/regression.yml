on:
  pull_request:
    branches: [ "master" ]

name: "Regression"

env:
  # always emit backtraces on crashes (to help debugging)
  RUST_BACKTRACE: 1
  # cargo should always emit color
  CARGO_TERM_COLOR: always
  # always output detailed logs with color
  RUST_LOG: trace
  RUST_LOG_STYLE: always

jobs:
  compare-results:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - uses: dtolnay/rust-toolchain@stable

    - name: Download LAZ file
      run: curl -L "https://cdn.routechoic.es/test.laz" -o test_file.laz

    - name: Run code on PR branch
      id: run_pr_branch
      run: |
        echo "Running code on PR branch"
        cargo build --release
        /usr/bin/time -o time_pr.txt target/release/pullauta test_file.laz
        mv pullautus.png pullautus_pr.png
        mv pullautus_depr.png pullautus_depr_pr.png
        mv temp/ temp_pr/

    - name: Download, extract and run latest release
      run: |
        # in a new folder to make sure we have a clean environment
        mkdir latest_release && cd latest_release
        curl -L https://github.com/rphlo/karttapullautin/releases/latest/download/karttapullautin-x86_64-linux.tar.gz | tar xvz
        /usr/bin/time -o ../time_main.txt ./pullauta ../test_file.laz
        mv pullautus.png ../pullautus_main.png
        mv pullautus_depr.png ../pullautus_depr_main.png
        mv temp/ ../temp_main/

    - name: Compare results (pngcomp)
      id: compare
        # The diff command gives exit status of 1 if files differ, but we do not want
        # to fail the job since we want to see the artifacts in that case.
      continue-on-error: true
      run: |
        # Compare the results from both branches, output results as step summary
        sudo apt install pngnq 
        printf "\n\n### Comparing without depressions:\n" | tee -a $GITHUB_STEP_SUMMARY
        pngcomp pullautus_main.png pullautus_pr.png | tee -a pngcomp.txt $GITHUB_STEP_SUMMARY
        printf "\n\n### Comparing with depressions:\n" | tee -a $GITHUB_STEP_SUMMARY
        pngcomp pullautus_depr_main.png pullautus_depr_pr.png | tee -a pngcomp_depr.txt $GITHUB_STEP_SUMMARY

        printf "\n\n### Comparing directory contents using diff:\n" | tee -a $GITHUB_STEP_SUMMARY
        diff -q temp_main/ temp_pr/ | tee -a pngcomp_depr.txt $GITHUB_STEP_SUMMARY
        # do another one that will show all the changes, but as a file instead
        diff temp_main/ temp_pr/ > diff.patch
        
        printf "\n\n### Execution time comparison:\n" | tee -a $GITHUB_STEP_SUMMARY
        printf "**Latest Release**\n" | tee -a $GITHUB_STEP_SUMMARY
        cat time_main.txt >> $GITHUB_STEP_SUMMARY
        printf "\n**PR**\n" | tee -a $GITHUB_STEP_SUMMARY
        cat time_pr.txt >> $GITHUB_STEP_SUMMARY
        

    
    - name: Upload results
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: regression-results
        path: |
          pullautus_main.png
          pullautus_pr.png
          pngcomp.txt
          pullautus_depr_main.png
          pullautus_depr_pr.png
          pngcomp_depr.txt
          diff.patch
          time_pr.txt
          time_main.txt
        overwrite: true # we need subsequent runs to overwrite the result

    - name: Output Artifact URL
      run: echo 'Artifacts can be downloaded [here](${{ steps.upload.outputs.artifact-url }})' >> $GITHUB_STEP_SUMMARY

    - name: Check for differences
      run: |
        # Analyze metrics: if there is a change this step should fail!

        # Here we could check any of the metrics output by pngcomp. for now we check the
        # percentage of overlapping/correct pixels and fail the job if it is less than 100%
        value=$(sed -rn 's/Percentage correct pixels: ([0-9]+\.[0-9]+)$/\1/p' pngcomp.txt)
        value_depr=$(sed -rn 's/Percentage correct pixels: ([0-9]+\.[0-9]+)$/\1/p' pngcomp_depr.txt)

        if (( $(echo "$value < 100.0" | bc -l) )); then
          echo "Percentage of correct pixels (without depressions) is $value < 100%. Output has changed!" | tee -a $GITHUB_STEP_SUMMARY
          exit 1
        fi

        if (( $(echo "$value_depr < 100.0" | bc -l) )); then
          echo "Percentage of correct pixels (with depressions) is $value_depr < 100%. Output has changed!" | tee -a $GITHUB_STEP_SUMMARY
          exit 1
        fi

